{"version":3,"sources":["Component/News.js","Component/Footerz.js","Component/Pages.js","App.js","serviceWorker.js","index.js"],"names":["News","props","react_default","a","createElement","Fragment","note","urlToImage","href","url","lib","className","header","responsive","image","width","blue-text","title","actions","dist_default","fromNow","publishedAt","content","Footerz","copyrights","moreLinks","m","src","alt","Pages","offset","activePage","maxButtons","onSelect","clic","App","state","word","news","today","pages","probe","console","log","newsapi","require","_this","v2","everything","q","page","then","response","articles","setState","consumirAPi","topHeadlines","language","sources","domains","from","to","sortBy","category","country","findBySubject","_this$state","topicBybutton","e","_this$state2","target","name","pageSize","catch","err","wordSearch","value","newsDaily","_this$state3","changePages","_this$state4","this","Date","_this$state5","newsToday","placeholder","onChange","onClick","icon","map","el","i","Component_News","key","no","Component_Pages","Component_Footerz","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.722ce863.chunk.js","sourcesContent":["import React from 'react'\nimport {Card ,CardTitle} from 'react-materialize'\nimport Moment from 'react-moment'\n\nconst News= (props) => {\n  return(\n    <>\n      {\n        props.note.urlToImage ?\n          <a href={props.note.url}>\n            {/*{console.log('keys--->',props.note.urlToImage)}*/}\n            <Card className='large txt-news'\n                  header={\n                    <CardTitle responsive=\"true\" image={props.note.urlToImage} width=\"100\" blue-text=\"true\">\n                      <p className=\"txt-tit\">\n                        {\n                          props.note.title\n                        }\n                      </p>\n                    </CardTitle>\n                  }\n                  actions={\n                    [\n                      <Moment fromNow className=\"txt-comment\">\n                        {props.note.publishedAt}\n                      </Moment>\n                    ]\n                  }\n            >\n\n              <p >{props.note.content}</p>\n            </Card>\n          </a>\n\n          : ''\n      }\n    </>\n\n\n  );\n}\n\nexport default News","import React from 'react'\nimport { Col,Footer } from 'react-materialize'\n\n\nconst Footerz = () => {\n  return(\n    <Footer\n      copyrights=\"Mizraim MartÃ­nez @2019\"\n      moreLinks={<a href=\"https://newsapi.org/\" >  Power by <b> News API   </b> </a>}\n      className=\"gray-text\"\n    >\n      <Col m={4}>\n        <h4 className=\"white-text \">\n          News - ZIM\n        </h4>\n      </Col>\n      <Col m={4} className=\"white-text \">\n        <p className=\"grey-text text-lighten-4\">\n          <img\n            src=\"https://github.githubassets.com/images/modules/logos_page/Octocat.png\"\n            width=\"40\"\n            alt=\"\"/>\n          <a href=\"https://github.com/mizraim17\" className=\"grey-text text-lighten-4\"> @Mizraim17 </a>\n        </p>\n      </Col>\n      <Col m={4} className=\"white-text \">\n        <a href=\"https://newsapi.org/\" className=\"grey-text text-lighten-4\"> Power by <b> NewsAPI.org   </b> </a>\n      </Col>\n    </Footer>\n  )\n}\n\nexport default Footerz;","import React from 'react';\nimport {Pagination,Row,Col} from 'react-materialize'\n\nconst  Pages= (props) => {\n  return(\n    <Row>\n      {/*{console.log('props--------',props)}*/}\n      <Col m={6} offset=\"m4\">\n        <Pagination\n          activePage={1}\n          maxButtons={8}\n          onSelect={props.clic}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Pages","import React, { Component } from 'react';\nimport {Button, Col,  Input, Row} from 'react-materialize'\nimport './App.css';\nimport News from \"./Component/News\";\nimport Footerz from \"./Component/Footerz\";\nimport Pages from \"./Component/Pages\";\n\nclass App extends Component {\n  state={\n    word:\"\",\n    news:[],\n    today:\"\",\n    pages:1\n  }\n\n  probe = () => {\n    console.log('--------------------------')\n\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('4891f314d6264426978f471d75136fd1');\n\n    let {news}= this.state;\n    newsapi.v2.everything({\n      q: \"apple\",\n      page:2\n    })\n      .then(response => {\n\n        news=response.articles;\n        console.log('news --->',news )\n        this.setState({news})\n      });\n  }\n\n  consumirAPi = () => {\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('4891f314d6264426978f471d75136fd1');\n// To query /v2/top-headlines\n// All options passed to topHeadlines are optional, but you need to include at least one of them\n    newsapi.v2.topHeadlines({\n      // sources: 'bbc-news',\n       q: 'economia',\n      //  category: 'business',\n        language: 'es',\n      // country: 'mx'\n    }).then(response => {\n      console.log('germany',response)\n      /*\n        {\n          status: \"ok\",\n          articles: [...]\n        }\n      */\n    });\n// To query /v2/everything\n// You must include at least one q, source, or domain\n    newsapi.v2.everything({\n      q: 'bitcoin',\n      sources: 'bbc-news,the-verge',\n      domains: 'bbc.co.uk, techcrunch.com',\n      from: '2019-04-20',\n      to: '2019-02-20',\n      language: 'en',\n      sortBy: 'relevanwordSearchcy',\n      page: 2\n    })\n      .then(response => {\n        console.log(response);\n\n      });\n// To query sources\n// All options are optional\n    newsapi.v2.sources({\n      category: 'technology',\n      language: 'en',\n      country: 'us'\n    }).then(response => {\n      console.log(response);\n      \n    });\n  }\n\n  findBySubject = () =>{\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('4891f314d6264426978f471d75136fd1');\n\n    let {word,news,pages}= this.state;\n    newsapi.v2.everything({\n      q: word,\n      page:pages,\n      sortBy:'publishedAt'\n    })\n    .then(response => {\n      news=response.articles;\n\n      this.setState({news})\n    });\n\n  }\n\n  topicBybutton = (e) =>{\n\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('4891f314d6264426978f471d75136fd1');\n\n    let {news,pages}= this.state;\n    let word=e.target.name;\n    console.log('word====================',word);\n\n    if(word){\n      newsapi.v2.everything({\n        q: word,\n        pageSize:50,\n        page:pages,\n        sortBy:'publishedAt'\n\n      })\n\n      .then(response => {\n        news=response.articles;\n        console.log('button',news)\n        this.setState({news})\n      })\n\n      .catch((err)=>{\n        console.log(err)\n      })\n\n      this.setState({word})\n      console.log('word--->',word)\n    }\n\n  }\n\n  wordSearch= (e) => {\n    this.setState({word:e.target.value})\n  }\n  \n  newsDaily = ()=> {\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('4891f314d6264426978f471d75136fd1');\n    let {news,pages} = this.state;\n    // console.log('pages---------------->',pages)\n\n    newsapi.v2.topHeadlines({\n      country:'mx',\n      pageSize:50,\n      page:pages,\n      sortBy: \"publishedAt\"\n    })\n  \n    .then(response => {\n      news=response.articles;\n      console.log(\"noticias =>\",news )\n      this.setState({news})\n    })\n\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  changePages = (e) => {\n\n    const NewsAPI = require('newsapi');\n    const newsapi = new NewsAPI('4891f314d6264426978f471d75136fd1');\n\n    let {news,pages,word}= this.state;\n    console.log('pages-before====================',pages);\n\n    console.log('eeeeeeeeeeeeeee====================',e);\n    pages=e;\n    this.setState({pages})\n    console.log('pages-after====================',pages);\n    newsapi.v2.everything({\n      q: word,\n      page:pages\n    })\n\n    .then(response => {\n      news=response.articles;\n      this.setState({news})\n    })\n\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  componentWillMount() {\n    let {today}=this.state;\n    today=Date()\n    if(today!==''){\n      this.setState({today})\n      // console.log('today willmount',today)\n    }\n  }\n\n  componentDidMount() {\n    this.newsDaily()\n    // this.probe()\n  }\n  \n  render() {\n    let {news,newsToday,pages} = this.state;\n    return (\n      <div>\n        <Row className=\"container\">\n          <Col m={6}  >\n            <Input\n              placeholder=\"Keywords\"\n              onChange={this.wordSearch}\n              />\n              <br/>\n            <Button onClick={this.findBySubject} icon=\"find_in_page\"  > </Button>\n          </Col>\n          <Col m={6}  >\n            <Button onClick={this.topicBybutton} icon=\"public\" name=\"mexico\"  >MÃ©xico</Button>\n            <Button onClick={this.topicBybutton} icon=\"laptop_mac\" name=\"technology\"  >Tech</Button>\n            <Button onClick={this.topicBybutton} icon=\"near_me\" name=\"cdmx\" >DF</Button>\n            <Button onClick={this.topicBybutton} icon=\"motorcycle\" name=\"moto\" >Byker </Button>\n            <Button onClick={this.topicBybutton} icon=\"code\" name=\"javascript\" >JS </Button>\n            <Button onClick={this.topicBybutton} icon=\"event_seat\" name=\"uaeh\" >UAEH </Button>\n            <Button onClick={this.topicBybutton} icon=\"remove_red_eye\" name=\"pachuca\" >pachuca </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col m={8} offset=\"m2\"  >\n            {\n              news.map((el,i)=>{\n                return(\n                  <News\n                    note={el}\n                    key={i}\n\n                  />\n                )\n              })\n            }\n          </Col>\n        </Row>\n        {\n          newsToday?\n            <Row>\n              <Col m={8} offset=\"m2\">\n                {\n                  newsToday.map((el,i)=>{\n                    return(\n                      <News\n                        note={el}\n                        key={i}\n                        no={i}\n                      />\n                    )\n                  })\n                }\n              </Col>\n            </Row>\n          :\n          ''\n        }\n        <Pages\n          clic={this.changePages}\n          page={pages}\n        />\n      <Footerz\n      />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'News content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}